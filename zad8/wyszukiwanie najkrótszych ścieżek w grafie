graf = {'A': {'B','C'},'B':{'D'},'C':{'B','D'},'D':{}}
koszty = {'B': 30, 'C': 10, 'D': float('inf')}
rodzice = {'B': 'A', 'C': 'A', 'D': None}
odwiedzone = []

def find_lowest_cost(koszty):
    najm_koszt = float('inf')
    najtanszy_wierzcholek = None
    for node in koszty:
        koszt = koszty[node]
        if koszt < najm_koszt and node not in odwiedzone:
            najm_koszt = koszt
            najtanszy_wierzcholek = node
    return najtanszy_wierzcholek


node = find_lowest_cost(koszty)
while node is not None:
    koszt = koszty[node]
    sosiedzi = graf[node]
    for v in sosiedzi.keys():
        new_cost = koszt + sosiedzi[v]
        if koszty[v] > new_cost:
            koszty[v] = new_cost
            rodzice[v] = node
    odwiedzone.append(node)
    node = find_lowest_cost()
